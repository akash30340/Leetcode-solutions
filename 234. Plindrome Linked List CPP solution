/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) 
    {
        ListNode* temp=head;
       // if(temp==NULL && temp->next==NULL)
       // return true;
        ListNode *slow,*fast;
        slow=fast=head;
        while(slow!=NULL && fast!=NULL && fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode *pnode,*cnode,*nnode;
        pnode=NULL;
        cnode=slow;
       // if(slow==NULL)
        
        nnode=cnode->next;
        while(cnode!=NULL)
        {
            cnode->next=pnode;
            pnode=cnode;
            cnode=nnode;
            if(cnode!=NULL)
            nnode=cnode->next;
        }  
        ListNode *temp2=head;
        while(temp2!=NULL && pnode!=NULL)
        {
            if(temp2->val == pnode->val)
            {
                temp2=temp2->next;
                pnode=pnode->next;
            }
            else
            {
                return false;
            }
        } 
        return true;         
        
    }
};
